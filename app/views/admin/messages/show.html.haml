-if action_name == 'preview'
	%p="收件人 #{@message.receiver.name}"
	-content_for :actions_button do
		=link_to "删除私信",{action: :destroy,type: "outbox"},class: "alert small button",method: "delete",data:{confirm: "确定删除这条私信吗？"}
-else
	%p="发件人 #{@message.sender.name}"
	-content_for :actions_button do
		=link_to "删除私信",{action: :destroy,type: "inbox"},class: "alert small button",method: "delete",data:{confirm: "确定删除这条私信吗？"}
%p.send-time="发送时间 #{@message.created_at.localtime.to_s(:db)}"
.message_content
	-content = @message.content.html_safe
	-if content.empty?
		无内容
	-else
		=content
-unless @insert_files.empty?
	.insert-files-c{"data-download" => '/admin/messages/download'}
		.insert-files-header="附件列表(#{@insert_files.size}个附件)"
		%ul.insert-files
			-@insert_files.each do |file|
				-a_tag = Nokogiri.parse(file)
				-unname_regex = %r{/document/\d{4}/\d{2}/\d{2}/.?}
				-if a_tag.at('a').text =~ unname_regex
					-text = a_tag.at('a').attributes["href"].value
					- if text =~ %r{\?uuid=[\d\w-]*}
						-uuid = %r{\?uuid=[\d\w-]*}.match(text).to_s
						-basename = File.basename(text).gsub(%r{\?uuid=[\d\w-]*},"")
					- else
						-uuid = false
						-basename = File.basename(text)
					-a_tag.at('a').content = basename
				-else
					-text = a_tag.at('a').attributes["href"].value
					- if text =~ %r{\?uuid=[\d\w-]*}
						-uuid = %r{\?uuid=[\d\w-]*}.match(text).to_s
				%li
					=a_tag.to_html.html_safe
					-if uuid
						=link_to "预览",{action: :crocodoc,uuid: uuid.gsub(%r{\?uuid=},"")},target: "_blank"